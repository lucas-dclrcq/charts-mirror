---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  push:
    branches: ["main"]
    paths: ["apps/**/metadata.yaml"]
  workflow_dispatch:
    inputs:
      chartName:
        type: string
        description: Chart Name
        required: true
      release:
        type: boolean
        description: Release
        required: false
        default: false

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.changed_files }}
    steps:
      - name: Get Changed Files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@1a5aeab1bfa64d0c4e786f501d5a3f1fad4a24da # v0.4.1
        with:
          patterns: apps/**/metadata.yaml

  changed:
    if: ${{ needs.prepare.outputs.changed-files != '[]' || github.event_name == 'workflow_dispatch' }}
    needs: ["prepare"]
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Extract App Values
        id: apps
        run: |
          if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
              apps="${{ join(fromJSON(needs.prepare.outputs.changed-files), ' ') }}"
          else
              apps="apps/${{ inputs.chartName }}/metadata.yaml"
          fi
          apps=$(yq eval-all --indent=0 --output-format=json "[.]" $apps)
          echo "apps=${apps}" >> $GITHUB_OUTPUT

  build:
    if: ${{ needs.changed.outputs.apps != '[]' }}
    needs: ["changed"]
    name: Build ${{ matrix.app.artifactName }}
    uses: ./.github/workflows/app-builder.yaml
    permissions:
      contents: read
      id-token: write
      packages: write
    secrets: inherit
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed.outputs.apps) }}
      fail-fast: false
      max-parallel: 4
    with:
      chartName: ${{ matrix.app.chartName }}
      chartVersion: ${{ matrix.app.chartVersion }}
      chartRegistry: ${{ matrix.app.chartRegistry }}
      artifactName: ${{ matrix.app.artifactName }}
      release: ${{ github.event_name == 'workflow_dispatch' && inputs.release || github.event_name == 'push' }}

  status:
    if: ${{ !cancelled() }}
    needs: ["build"]
    name: Build Success
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
